---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Hero from '../../components/Hero.astro';
import CTASection from '../../components/CTASection.astro';
import Footer from '../../components/Footer.astro';

export const prerender = true;

export async function getStaticPaths() {
  const comparisons = await getCollection('comparisons');
  
  return comparisons.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const pageTitle = entry.data.title;
const pageDescription = entry.data.description;

// Parse markdown content for comparison tables and structured sections
const rawContent = entry.body;
const sections: any[] = [];
let currentSection: any = { title: '', content: [], type: 'content' };

const lines = rawContent.split('\n');

for (let i = 0; i < lines.length; i++) {
  const line = lines[i];
  
  // Skip the H1 title
  if (line.startsWith('# ') && !line.startsWith('## ')) {
    continue;
  }
  
  // New H2 section
  if (line.startsWith('## ')) {
    if (currentSection.content.length > 0 || currentSection.title) {
      sections.push({ ...currentSection });
    }
    const title = line.substring(3).trim();
    currentSection = { 
      title, 
      content: [],
      type: 'content'
    };
    
    // Check for comparison table sections
    if (title.toLowerCase().includes('comparison') || title.toLowerCase().includes('vs') || title.toLowerCase().includes('overview')) {
      currentSection.type = 'comparison';
    } else if (title.toLowerCase().includes('advantages') || title.toLowerCase().includes('benefits')) {
      currentSection.type = 'advantages';
    } else if (title.toLowerCase().includes('disadvantages') || title.toLowerCase().includes('cons')) {
      currentSection.type = 'disadvantages';
    }
  } 
  // Check for H3 headers
  else if (line.startsWith('### ')) {
    const h3Text = line.substring(4).trim();
    currentSection.content.push({ type: 'h3', text: h3Text });
  }
  // Bullet points
  else if (line.startsWith('- ') || line.startsWith('* ')) {
    const text = line.substring(2).trim();
    currentSection.content.push({ type: 'bullet', text });
  }
  // Regular paragraph
  else if (line.trim()) {
    currentSection.content.push({ type: 'paragraph', text: line });
  }
}

// Add the last section
if (currentSection.content.length > 0 || currentSection.title) {
  sections.push({ ...currentSection });
}
---

<Layout 
  title={pageTitle} 
  description={pageDescription}
  structuredDataType="WebPage"
  structuredData={{
    breadcrumb: [
      { name: 'Home', url: '/' },
      { name: 'Comparisons', url: '/comparisons' },
      { name: entry.data.title, url: `/comparisons/${entry.slug}` }
    ]
  }}
>
  <Header />
  
  <!-- Hero Section -->
  <Hero
    headline={entry.data.title}
    subheadline={entry.data.description}
    primaryCTA={{ text: 'Get Expert Advice', href: '/contact' }}
    secondaryCTA={{ text: 'View Our Services', href: '/services' }}
  />
  
  <main>
    <!-- Dynamic Content Sections -->
    {sections.map((section, index) => {
      const bgClass = index % 2 === 0 ? 'bg-white' : 'bg-gray-50';
      
      return (
        <section class={`section-padding ${bgClass}`}>
          <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            {section.title && (
              <div class="text-center mb-12">
                <h2 class="text-3xl sm:text-4xl font-chillax font-bold text-beach-dark mb-4">
                  {section.title}
                </h2>
              </div>
            )}
            
            {/* Comparison Grid */}
            {section.type === 'comparison' && (
              <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 max-w-6xl mx-auto">
                {section.content.filter(item => item.type === 'h3').map((item, idx) => {
                  // Get bullets after this H3
                  const h3Index = section.content.indexOf(item);
                  const bullets = [];
                  for (let i = h3Index + 1; i < section.content.length; i++) {
                    if (section.content[i].type === 'h3') break;
                    if (section.content[i].type === 'bullet') {
                      bullets.push(section.content[i].text);
                    }
                  }
                  
                  return (
                    <div class={`rounded-xl p-8 shadow-lg ${idx === 0 ? 'bg-gradient-to-br from-beach-blue to-beach-blue/90 text-white' : 'bg-white border border-gray-100'}`}>
                      <h3 class={`text-2xl font-bold mb-6 ${idx === 0 ? 'text-white' : 'text-gray-900'}`}>
                        {item.text}
                      </h3>
                      <ul class="space-y-3">
                        {bullets.map((bullet) => (
                          <li class="flex items-start">
                            <i data-lucide="check-circle" class={`w-5 h-5 mr-3 flex-shrink-0 mt-0.5 ${idx === 0 ? 'text-beach-yellow' : 'text-beach-blue'}`}></i>
                            <span class={`${idx === 0 ? 'text-white' : 'text-gray-700'}`}>{bullet.replace(/^\*\*|^\-|\*\*$/g, '').trim()}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  );
                })}
              </div>
            )}
            
            {/* Advantages/Benefits Grid */}
            {section.type === 'advantages' && (
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                {section.content.filter(item => item.type === 'h3').map((item) => {
                  const h3Index = section.content.indexOf(item);
                  let description = '';
                  for (let i = h3Index + 1; i < section.content.length; i++) {
                    if (section.content[i].type === 'h3') break;
                    if (section.content[i].type === 'paragraph') {
                      description += section.content[i].text + ' ';
                    }
                  }
                  
                  return (
                    <div class="bg-white rounded-xl p-6 shadow-md border border-gray-100 hover:border-beach-blue/20 transition-colors">
                      <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4">
                        <i data-lucide="check-circle" class="w-6 h-6 text-green-600"></i>
                      </div>
                      <h3 class="text-xl font-bold text-gray-900 mb-3">{item.text}</h3>
                      <p class="text-gray-600 leading-relaxed">{description.trim()}</p>
                    </div>
                  );
                })}
              </div>
            )}
            
            {/* Disadvantages Grid */}
            {section.type === 'disadvantages' && (
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                {section.content.filter(item => item.type === 'h3').map((item) => {
                  const h3Index = section.content.indexOf(item);
                  let description = '';
                  for (let i = h3Index + 1; i < section.content.length; i++) {
                    if (section.content[i].type === 'h3') break;
                    if (section.content[i].type === 'paragraph') {
                      description += section.content[i].text + ' ';
                    }
                  }
                  
                  return (
                    <div class="bg-white rounded-xl p-6 shadow-md border border-gray-100 hover:border-red-100 transition-colors">
                      <div class="w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center mb-4">
                        <i data-lucide="alert-circle" class="w-6 h-6 text-red-600"></i>
                      </div>
                      <h3 class="text-xl font-bold text-gray-900 mb-3">{item.text}</h3>
                      <p class="text-gray-600 leading-relaxed">{description.trim()}</p>
                    </div>
                  );
                })}
              </div>
            )}
            
            {/* Regular Content Section */}
            {section.type === 'content' && (
              <div class="prose prose-lg max-w-4xl mx-auto">
                {section.content.map((item) => {
                  if (item.type === 'h3') {
                    return <h3 class="text-2xl font-chillax font-semibold text-gray-800 mb-4 mt-8">{item.text}</h3>;
                  } else if (item.type === 'paragraph') {
                    const htmlText = item.text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
                    return <p class="text-lg text-gray-600 mb-6 leading-relaxed" set:html={htmlText}></p>;
                  } else if (item.type === 'bullet') {
                    return (
                      <ul class="list-disc pl-6 mb-2 space-y-1">
                        <li class="text-gray-600">{item.text}</li>
                      </ul>
                    );
                  }
                  return null;
                })}
              </div>
            )}
          </div>
        </section>
      );
    })}
    
    <!-- CTA Section -->
    <CTASection
      headline="Which Option Is Best for Your Business?"
      description="Let's discuss your specific needs and recommend the perfect solution"
      primaryCTA={{ text: 'Get Expert Consultation', href: '/contact' }}
      secondaryCTA={{ text: 'Call 910-512-6990', href: 'tel:910-512-6990' }}
      variant="gradient"
    />
  </main>
  
  <Footer />
</Layout>

<style>
  /* Beach Bird brand colors */
  .bg-beach-blue {
    background-color: #47A7EB;
  }
  
  .bg-beach-yellow {
    background-color: #FFC107;
  }
  
  .text-beach-blue {
    color: #47A7EB;
  }
  
  .text-beach-yellow {
    color: #FFC107;
  }
  
  .text-beach-dark {
    color: #0C3745;
  }
  
  /* Comparison styling */
  .prose h2 {
    @apply text-3xl font-chillax font-bold text-beach-dark mb-6;
  }
  
  .prose h3 {
    @apply text-2xl font-chillax font-semibold text-gray-800 mb-4;
  }
  
  .prose p {
    @apply text-lg text-gray-600 mb-6 leading-relaxed;
  }
  
  .prose ul {
    @apply list-disc pl-6 mb-6 space-y-2;
  }
  
  .prose li {
    @apply text-gray-600;
  }
  
  .prose strong {
    @apply font-semibold text-gray-900;
  }
  
  .prose a {
    @apply text-beach-blue hover:text-blue-700 underline;
  }
</style>