---
export interface Props {
  variant?: 'default' | 'transparent';
}

const { variant = 'default' } = Astro.props;

const navItems = [
  { href: '#services', label: 'Services' },
  { href: '#process', label: 'Process' },
  { href: '#success', label: 'Results' },
];
---

<header class={`fixed top-0 left-0 right-0 ${variant === 'transparent' ? 'bg-transparent' : 'bg-white/95 backdrop-blur-md'} z-50 border-b border-gray-100`}>
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/">
          <img src="/images/logo.svg" alt="Beach Bird Studios" class="h-12 w-auto" />
        </a>
      </div>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {navItems.map((item) => (
          <a href={item.href} class="text-gray-600 hover:text-primary transition-colors">
            {item.label}
          </a>
        ))}
        <a href="#contact" class="btn-primary">Get Started</a>
      </div>
      
      <!-- Mobile Menu Button -->
      <button class="md:hidden p-2 rounded-lg hover:bg-gray-100" id="mobile-menu-button">
        <i data-lucide="menu" class="w-6 h-6"></i>
      </button>
    </div>
  </nav>
  
  <!-- Mobile Menu -->
  <div class="hidden md:hidden bg-white border-t border-gray-100" id="mobile-menu">
    <div class="px-4 py-2 space-y-1">
      {navItems.map((item) => (
        <a href={item.href} class="block px-3 py-2 text-gray-600 hover:text-primary hover:bg-gray-50 rounded-lg transition-colors">
          {item.label}
        </a>
      ))}
      <div class="pt-2 pb-3 border-t border-gray-100">
        <a href="#contact" class="btn-primary w-full justify-center">Get Started</a>
      </div>
    </div>
  </div>
</header>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });
  
  // Close mobile menu when clicking on a link
  const mobileMenuLinks = mobileMenu?.querySelectorAll('a');
  mobileMenuLinks?.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
    });
  });
</script>