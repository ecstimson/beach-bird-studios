---
export interface Props {
  title: string;
  tagline?: string;
  description: string;
  features: string[];
  href: string;
  ctaText?: string;
  icon: string;
  featured?: boolean;
}

const {
  title,
  tagline,
  description,
  features = [],
  href,
  ctaText = 'Learn More',
  icon,
  featured = false
} = Astro.props;
---

<div class={featured ? 'featured-card rounded-2xl p-8 card-hover' : 'bg-white border-2 border-gray-200 rounded-2xl p-8 card-hover'}>
  <div class={`w-14 h-14 ${featured ? 'bg-white/20' : 'bg-blue-100'} rounded-xl flex items-center justify-center mb-6`}>
    <i data-lucide={icon} class={`w-7 h-7 ${featured ? 'text-white' : 'text-blue-600'}`}></i>
  </div>
  
  <h3 class={`text-2xl font-bold ${featured ? 'text-white' : 'text-gray-900'} mb-2`}>
    {title}
  </h3>
  
  {tagline && (
    <p class={`text-lg font-semibold ${featured ? 'text-yellow-300' : 'text-blue-600'} mb-4`}>
      {tagline}
    </p>
  )}
  
  <p class={`${featured ? 'text-white' : 'text-gray-600'} mb-6`}>
    {description}
  </p>
  
  {features.length > 0 && (
    <ul class="space-y-3 mb-8">
      {features.map((feature) => (
        <li class="flex items-start">
          <i data-lucide="check-circle" class={`w-5 h-5 ${featured ? 'text-yellow-300' : 'text-green-500'} mr-3 flex-shrink-0 mt-0.5`}></i>
          <span class={featured ? 'text-white' : 'text-gray-700'}>{feature}</span>
        </li>
      ))}
    </ul>
  )}
  
  <a 
    href={href}
    class={`w-full ${featured ? 'btn-primary' : 'btn-secondary'} flex items-center justify-center`}
  >
    {ctaText}
    <i data-lucide="arrow-right" class="w-4 h-4 ml-2"></i>
  </a>
</div>