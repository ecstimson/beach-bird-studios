---
/** ProcessTimeline.astro
 * Linear or stepped timeline for process/approach pages
 * Props: { title, steps[], variant? } where step = { step: number, title: string, body: string, media? }
 */
export interface Props {
  title: string
  steps: {
    step: number
    title: string
    body: string
    media?: string | any
  }[]
  variant?: "numbered" | "lined"
}

const { title, steps = [], variant = "numbered" } = Astro.props
---

<section class="container mx-auto max-w-screen-xl px-4 md:px-6 py-16 md:py-24">
  <div class="text-center mb-12">
    <h2 class="text-4xl md:text-5xl font-heading font-semibold tracking-tight text-text">{title}</h2>
  </div>
  
  <div class="space-y-8 md:space-y-10">
    {steps.map((step) => (
      <div class="grid md:grid-cols-[auto,1fr] md:gap-6 gap-4">
        <div class="w-9 h-9 rounded-full bg-primary-600 text-inverse grid place-items-center font-semibold">
          {step.step}
        </div>
        <div class="space-y-2">
          <h3 class="text-2xl font-heading font-semibold text-text">{step.title}</h3>
          <div class="prose prose-invert max-w-none text-text/90" set:html={step.body}></div>
          {step.media && (
            <div class="mt-4">
              {typeof step.media === 'string' ? (
                <img src={step.media} alt="" class="rounded-[var(--radius-md)] max-w-sm" />
              ) : (
                step.media
              )}
            </div>
          )}
        </div>
      </div>
    ))}
  </div>
</section>